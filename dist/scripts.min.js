let pokemonRepository = (function() {
  let e = [],
    t = 'https://pokeapi.co/api/v2/pokemon/?limit=150';
  function n(t) {
    'object' == typeof t && 'name' in t
      ? e.push(t)
      : console.log('pokemon is not correct');
  }
  function o(e) {
    let t = e.detailsUrl;
    return fetch(t)
      .then(function(e) {
        return e.json();
      })
      .then(function(t) {
        (e.imageUrl = t.sprites.front_default),
          (e.height = t.height),
          (e.weight = t.weight),
          (e.types = t.types);
      })
      .catch(function(e) {
        console.error(e);
      });
  }
  return {
    add: n,
    getAll: function() {
      return e;
    },
    addListItem: function(e) {
      let t = document.querySelector('.pokemon-list'),
        n = document.createElement('li'),
        i = document.createElement('div'),
        l = document.createElement('button');
      (l.innerText = e.name),
        i.classList.add('pokemon'),
        l.classList.add('pokemon-button'),
        i.appendChild(l),
        n.appendChild(i),
        t.appendChild(n),
        l.addEventListener('click', function() {
          !(function(e) {
            o(e).then(function() {
              !(function(e) {
                let t = $('.modal-body'),
                  n = $('.modal-title');
                n.empty(), t.empty();
                let o = $('<h1>' + e.name + '</h1>'),
                  i = $('<img class="modal-img" style="width:50%">');
                i.attr('src', e.imageUrl);
                let l = $('<p>Height : ' + e.height + ' m</p>'),
                  c = $('<p>Weight : ' + e.weight + ' kg</p>');
                n.append(o),
                  t.append(i),
                  t.append(l),
                  t.append(c),
                  $('#exampleModalLive').modal();
              })(e);
            });
          })(e);
        });
    },
    loadList: function() {
      return fetch(t)
        .then(function(e) {
          return e.json();
        })
        .then(function(e) {
          e.results.forEach(function(e) {
            n({ name: e.name, detailsUrl: e.url });
          });
        })
        .catch(function(e) {
          console.error(e);
        });
    },
    loadDetails: o
  };
})();
pokemonRepository.loadList().then(function() {
  document
    .querySelector('.search-pokemon')
    .addEventListener('submit', function(e) {
      e.preventDefault();
      let t = document.querySelector('#myInput').value;
      (document.querySelector('.pokemon-list').innerHTML = ''),
        '' === t
          ? pokemonRepository.getAll().forEach(function(e) {
              pokemonRepository.addListItem(e);
            })
          : pokemonRepository.getAll().forEach(function(e) {
              e.name.indexOf(t) > -1 && pokemonRepository.addListItem(e);
            });
    }),
    pokemonRepository.getAll().forEach(function(e) {
      pokemonRepository.addListItem(e);
    });
});
